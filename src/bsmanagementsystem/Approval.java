/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bsmanagementsystem;

import DBConnect.DBconnect;
import classes.approval;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;



/**
 *
 * @author Rashan
 */

public class Approval extends javax.swing.JFrame {

    //approval app = new approval();
    
    
    Connection con = null;
    PreparedStatement pst=null;
    ResultSet rs = null;
   
    private String cat,Sdate,Edate;
    /*combi1;
    private String comb = null;
    private String btwn = " - ";
    private String space = " ";*/
    String cat1;
    String start1;
    String end1;
    String date;
    
    public Approval() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1366, 768));
        setPreferredSize(new java.awt.Dimension(1366, 768));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Back");
        jButton1.setMaximumSize(new java.awt.Dimension(188, 54));
        jButton1.setMinimumSize(new java.awt.Dimension(188, 54));
        jButton1.setPreferredSize(new java.awt.Dimension(188, 54));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Please Select", "Administration Expenses", "Petty Cash Expenses", "Maintenance Exp", "Other Expenses" }));
        jComboBox1.setMaximumSize(new java.awt.Dimension(216, 54));
        jComboBox1.setMinimumSize(new java.awt.Dimension(216, 54));
        jComboBox1.setPreferredSize(new java.awt.Dimension(216, 54));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Approvals");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel2.setMaximumSize(new java.awt.Dimension(216, 54));
        jLabel2.setMinimumSize(new java.awt.Dimension(216, 54));
        jLabel2.setPreferredSize(new java.awt.Dimension(216, 54));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Category");
        jLabel1.setMaximumSize(new java.awt.Dimension(188, 54));
        jLabel1.setMinimumSize(new java.awt.Dimension(188, 54));
        jLabel1.setPreferredSize(new java.awt.Dimension(188, 54));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Period");

        jTextField1.setEditable(false);

        jDateChooser1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jDateChooser1.setMinimumSize(new java.awt.Dimension(216, 50));
        jDateChooser1.setPreferredSize(new java.awt.Dimension(216, 50));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Start");
        jLabel5.setMaximumSize(new java.awt.Dimension(188, 54));
        jLabel5.setMinimumSize(new java.awt.Dimension(188, 54));
        jLabel5.setPreferredSize(new java.awt.Dimension(188, 54));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("End");
        jLabel4.setMaximumSize(new java.awt.Dimension(188, 54));
        jLabel4.setMinimumSize(new java.awt.Dimension(188, 54));
        jLabel4.setPreferredSize(new java.awt.Dimension(188, 54));

        jDateChooser2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jDateChooser2.setMaximumSize(new java.awt.Dimension(105, 22));
        jDateChooser2.setMinimumSize(new java.awt.Dimension(105, 22));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("Show");
        jButton2.setMaximumSize(new java.awt.Dimension(188, 54));
        jButton2.setMinimumSize(new java.awt.Dimension(188, 54));
        jButton2.setPreferredSize(new java.awt.Dimension(188, 54));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextField1)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(75, 75, 75))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(198, 198, 198)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)))
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(78, 78, 78))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        new FinanceMain().setVisible(true);
        this.dispose();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        Sdate = getStartDate();
        Edate = getEndDate();
        String m =getMonthStart();
        //String m1,m2,m3;
        String m4 = getMonthEnd();
        
        
       String dis = new approval().concat(Sdate,Edate,m,m4);
       jTextField1.setText(dis);
       tableLoad(this.getCat());
      //tableLoadQuery();
        //tableLoad();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        showTable();
    }//GEN-LAST:event_jComboBox1ActionPerformed
    
         public final void tableLoad(String cat2){
             
          // getapprovals(this.getCat(),this.getStartDateFormat(),this.getEndDateFormat().toString());
      
     }
    /*     
     public final void tableLoadQuery(){
         approval app1 = new approval();

         PreparedStatement pst1=null;
         ResultSet rs1 = null;
         con = DBconnect.connect();
         String start = getStartDateFormat();
         String end = getEndDateFormat();
         String ssql = approvals1(this.jComboBox1.getSelectedItem().toString(),start,end);
         try
        {
            
            String sql = ssql;
            //sql = "SELECT Category = '"+cat+"' & Start = '"+Sdate+"' & End = '"+Edate+"' FROM approval";
            pst1 = con.prepareStatement(sql);
            rs1 = pst1.executeQuery(sql);
            jTable1.setModel(DbUtils.resultSetToTableModel(rs1));
            //JOptionPane.showMessageDialog(null,"Successfull");
        
        }
              
    catch(SQLException e)
                {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null,"UN-Successfull");
                }
     }
     */
      private void loadtable(String cat){
          
         PreparedStatement pst1=null;
         ResultSet rs1 = null;
         con = DBconnect.connect();
        // String start = getStartDateFormat();
         // end = getEndDateFormat();
        
         if(cat == "Administration Expenses"){
         try
        {
            
            String sql;
            sql = "SELECT ExpenseID,Category,Amount,Approval FROM adminexpenses";
            pst1 = con.prepareStatement(sql);
            rs1 = pst1.executeQuery(sql);
            jTable1.setModel(DbUtils.resultSetToTableModel(rs1));
            //JOptionPane.showMessageDialog(null,"Successfull");
        
        }
              
    catch(SQLException e)
                {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null,"UN-Successfull");
                }
          
      }
      else if(cat == "Maintenance Exp"){
           try
        {
            
            String sql;
            sql = "SELECT ExpenseID,Category,Amount,Approval FROM maintainexp";
            pst1 = con.prepareStatement(sql);
            rs1 = pst1.executeQuery(sql);
            jTable1.setModel(DbUtils.resultSetToTableModel(rs1));
            //JOptionPane.showMessageDialog(null,"Successfull");
        
        }
              
    catch(SQLException e)
                {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null,"UN-Successfull");
                }
          
      }
       else if(cat == "Petty Cash Expenses"){
           try
        {
            
            String sql;
            sql = "SELECT ExpenseID,Category,Amount,Approval FROM pettycashexp";
            pst1 = con.prepareStatement(sql);
            rs1 = pst1.executeQuery(sql);
            jTable1.setModel(DbUtils.resultSetToTableModel(rs1));
            //JOptionPane.showMessageDialog(null,"Successfull");
        
        }
              
    catch(SQLException e)
                {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null,"UN-Successfull");
                }
          
      }
       else if(cat == "Other Expenses"){
           try
        {
            
            String sql;
            sql = "SELECT ExpenseID,Category,Amount,Approval FROM otherexp";
            pst1 = con.prepareStatement(sql);
            rs1 = pst1.executeQuery(sql);
            jTable1.setModel(DbUtils.resultSetToTableModel(rs1));
            //JOptionPane.showMessageDialog(null,"Successfull");
        
        }
              
    catch(SQLException e)
                {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null,"UN-Successfull");
                }
          
      }
      else{}
    
}
      private void showTable(){
          
          loadtable(this.getCat());
      }
    
    /*  public void getapprovals(String cat,String start,String end){
      
       con = DBconnect.connect();
      
       
       if (null == cat){
           JOptionPane.showMessageDialog(null,"UN-Successfull - Invalid Category");
       }
       else switch (cat) {
            case "Administration Expenses":
                try
                {
                    String s = "SELECT ExpenseID,Category,Approval FROM adminexpenses WHERE Date BETWEEN '"+start+"' and '"+end+"';";
                    pst = con.prepareStatement(s);
                    rs = pst.executeQuery(s);
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    JOptionPane.showMessageDialog(null,"Entry Successfull");
                    
                }
                
                catch(SQLException e)
                {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null,"Entry UN-Successfull");
                }
                break;
            case "Maintenance Expenses":
                try
                {
                    String s = "SELECT ExpenseID,Category,Approval FROM maintainexp WHERE Date BETWEEN '"+start+"' and '"+end+"';";
                    pst = con.prepareStatement(s);
                    rs = pst.executeQuery(s);
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    JOptionPane.showMessageDialog(null,"Entry Successfull");
                    
                }
                
                catch(SQLException e)
                {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null,"Entry UN-Successfull");
                }
                break;
            case "PettyCash Expenses":
                try
                {
                    String s = "SELECT ExpenseID,Category,Approval FROM pettycashexp WHERE Date BETWEEN '"+start+"' and '"+end+"';";
                    pst = con.prepareStatement(s);
                    rs= pst.executeQuery(s);
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    JOptionPane.showMessageDialog(null,"Entry Successfull");
                    
                }
                
                catch(SQLException e)
                {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null,"Entry UN-Successfull");
                }
                break;
            case "Other Expenses":
                try
                {
                    String s = "SELECT ExpenseID,Category,Approval FROM otherexp WHERE Date BETWEEN '"+start+"' and '"+end+"';";
                    pst = con.prepareStatement(s);
                    rs = pst.executeQuery(s);
                    jTable1.setModel(DbUtils.resultSetToTableModel(rs));
                    JOptionPane.showMessageDialog(null,"Entry Successfull");
                    
                }
                
                catch(SQLException e)
                {
                    System.out.println(e);
                    JOptionPane.showMessageDialog(null,"Entry UN-Successfull");
                }
                break;
            default:
                JOptionPane.showMessageDialog(null,"UN-Successfull - Invalid Category");
                break;
        }
       
   }*/
    String getCat(){
      
        String a = jComboBox1.getSelectedItem().toString() ;
        return a;
    }
    
 String getEndDate()
{
   String x = this.jDateChooser2.getDate().toString();
   System.out.println(x);

   char []arr = new char[50];
   
   x.getChars(8,11,arr,0);
   x.getChars(9,12,arr,1);
   
   char y = arr[0];
   char n = arr[1];
   
   String date1 = String.valueOf(y);
   String date2 = String.valueOf(n);
   
   String date = date1.concat(date2);
   
   System.out.println(date);
   
    //filltxtFields(r,b,d);
    return date;
}
    
String getStartDate()
{
   String x = this.jDateChooser1.getDate().toString();
   System.out.println(x);

   char []arr = new char[50];
   
   x.getChars(8,11,arr,0);
   x.getChars(9,12,arr,1);
   
   char y = arr[0];
   char n = arr[1];
   
   String date1 = String.valueOf(y);
   String date2 = String.valueOf(n);
   
   String date = date1.concat(date2);
   
   System.out.println(date);
   
    //filltxtFields(r,b,d);
    return date;
}

String getMonthStart(){
    
   String x = this.jDateChooser1.getDate().toString();
   System.out.println(x);

   char []arr = new char[50];
   
   x.getChars(4,7,arr,0);
   x.getChars(5,8,arr,1);
   x.getChars(6,9,arr,2);
   
   char y = arr[0];
   char n = arr[1];
   char c = arr[2];
   
   String m1 = String.valueOf(y);
   String m2 = String.valueOf(n);
   String m3 = String.valueOf(c);
   
   String mn1 = m1.concat(m2);
   String mf = mn1.concat(m3);
   
   System.out.println(mf);
   
    //filltxtFields(r,b,d);
    return mf;
}
    
String getMonthEnd(){
    
   String x = this.jDateChooser2.getDate().toString();
   System.out.println(x);

   char []arr = new char[50];
   
   x.getChars(4,7,arr,0);
   x.getChars(5,8,arr,1);
   x.getChars(6,9,arr,2);
   
   char y = arr[0];
   char n = arr[1];
   char c = arr[2];
   
   String m1 = String.valueOf(y);
   String m2 = String.valueOf(n);
   String m3 = String.valueOf(c);
   
   String mn1 = m1.concat(m2);
   String mf = mn1.concat(m3);
   
   System.out.println(mf);
   
    //filltxtFields(r,b,d);
    return mf;
}

 private String getStartDateFormat(){
     
     String SDate = this.jDateChooser1.getDate().toString();
     
     SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
     String format = formatter.format(SDate);
     System.out.println(SDate);
     return SDate;
 }
 
 private String getEndDateFormat(){
     String EDate = this.jDateChooser2.getDate().toString();
     
     SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
     String format = formatter.format(EDate);
     System.out.println(EDate);
     return EDate;
 }
public String approvals1(String cat,String start,String end){
          
       cat1 = cat;
       start1 = start;
       end1 = end;   
       String s;
       
       if ("Administration Expenses".equals(cat1)){

            s = "SELECT ExpenseID,Category,Approval FROM adminexpenses WHERE Date >= '"+start1+"' and Date < '"+end1+"';";
                
            return s;
  
        
       }
       else if("Maintenance Expenses".equals(cat1)){
        
            s = "SELECT ExpenseID,Category,Approval FROM maintainexp WHERE Date >= '"+start1+"' and Date < '"+end1+"';";
            
            return s;

       }
       
       else if ("PettyCash Expenses".equals(cat1)){

            s = "SELECT ExpenseID,Category,Approval FROM pettycashexp WHERE Date >= '"+start1+"' and < '"+end1+"';";
            return s;

       }
       
       else if ("Other Expenses".equals(cat1)){

            s = "SELECT ExpenseID,Category,Approval FROM otherexp WHERE Date >= '"+start1+"' and < '"+end1+"';";
            return s;
            
       }
       else{
           JOptionPane.showMessageDialog(null,"UN-Successfull - Invalid Category");
           return null;
       }
       
   }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Approval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Approval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Approval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Approval.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Approval().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    public javax.swing.JComboBox<String> jComboBox1;
    public com.toedter.calendar.JDateChooser jDateChooser1;
    public com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    public javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
